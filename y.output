Grammar

    0 $accept: program $end

    1 program: vars funcs stmts

    2 vars: vars var
    3     | ε

    4 var: VAR NAME TYPE ASSIGN exp SEMICOLON

    5 funcs: funcs func
    6      | ε

    7 func: FUN NAME TYPE LPAREN argdecls RPAREN LCURL vars stmts RCURL

    8 argdecls: ε
    9         | argdecl
   10         | argdecl COMMA argdecls

   11 argdecl: NAME TYPE

   12 stmts: stmts stmt
   13      | stmt

   14 stmt: RETURN exp SEMICOLON
   15     | RETURN SEMICOLON
   16     | IF LPAREN exp RPAREN LCURL stmts RCURL
   17     | IF LPAREN exp RPAREN LCURL stmts RCURL ELSE LCURL stmts RCURL
   18     | WHILE LPAREN exp RPAREN LCURL stmts RCURL
   19     | WHILE LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts RCURL
   20     | REPEAT LPAREN exp RPAREN LCURL stmts RCURL
   21     | NAME ASSIGN exp SEMICOLON
   22     | NAME LPAREN exps RPAREN SEMICOLON

   23 exp: INT
   24    | NAME
   25    | STRING
   26    | LPAREN exp RPAREN
   27    | NAME LPAREN exps RPAREN
   28    | exp OP_PLUS exp
   29    | exp OP_MINUS exp
   30    | exp OP_TIMES exp
   31    | exp OP_DIV exp
   32    | exp OP_REM exp
   33    | exp OP_BOR exp
   34    | exp OP_BAND exp
   35    | exp OP_XOR exp
   36    | exp OP_AND exp
   37    | exp OP_OR exp
   38    | exp OP_EQ exp
   39    | exp OP_NE exp
   40    | exp OP_LT exp
   41    | exp OP_GT exp
   42    | exp OP_LE exp
   43    | exp OP_GE exp
   44    | OP_NOT exp

   45 exps: exp COMMA exps
   46     | exp
   47     | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    STRING <sval> (258) 25
    NAME <sval> (259) 4 7 11 21 22 24 27
    TYPE <sval> (260) 4 7 11
    INT <ival> (261) 23
    RETURN (262) 14 15
    IF (263) 16 17
    ELSE (264) 17
    WHILE (265) 18 19
    OTHERWISE (266) 19
    REPEAT (267) 20
    SEMICOLON (268) 4 14 15 21 22
    LPAREN (269) 7 16 17 18 19 20 22 26 27
    RPAREN (270) 7 16 17 18 19 20 22 26 27
    LCURL (271) 7 16 17 18 19 20
    RCURL (272) 7 16 17 18 19 20
    ASSIGN (273) 4 21
    VAR (274) 4
    FUN (275) 7
    COMMA (276) 10 45
    OP_OR (277) 37
    OP_AND (278) 36
    OP_BOR (279) 33
    OP_XOR (280) 35
    OP_BAND (281) 34
    OP_EQ (282) 38
    OP_NE (283) 39
    OP_LT (284) 40
    OP_GT (285) 41
    OP_LE (286) 42
    OP_GE (287) 43
    OP_PLUS (288) 28
    OP_MINUS (289) 29
    OP_TIMES (290) 30
    OP_DIV (291) 31
    OP_REM (292) 32
    OP_NOT (293) 44


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program (40)
        on left: 1
        on right: 0
    vars <vars> (41)
        on left: 2 3
        on right: 1 2 7
    var <var> (42)
        on left: 4
        on right: 2
    funcs <funcs> (43)
        on left: 5 6
        on right: 1 5
    func <func> (44)
        on left: 7
        on right: 5
    argdecls <argdecls> (45)
        on left: 8 9 10
        on right: 7 10
    argdecl <argdecl> (46)
        on left: 11
        on right: 9 10
    stmts <stmts> (47)
        on left: 12 13
        on right: 1 7 12 16 17 18 19 20
    stmt <stmt> (48)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 12 13
    exp <exp> (49)
        on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 4 14 16 17 18 19 20 21 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    exps <exps> (50)
        on left: 45 46 47
        on right: 22 27 45


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (vars)

    program  go to state 1
    vars     go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: vars • funcs stmts
    2 vars: vars • var

    VAR  shift, and go to state 4

    $default  reduce using rule 6 (funcs)

    var    go to state 5
    funcs  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 var: VAR • NAME TYPE ASSIGN exp SEMICOLON

    NAME  shift, and go to state 7


State 5

    2 vars: vars var •

    $default  reduce using rule 2 (vars)


State 6

    1 program: vars funcs • stmts
    5 funcs: funcs • func

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    FUN     shift, and go to state 13

    func   go to state 14
    stmts  go to state 15
    stmt   go to state 16


State 7

    4 var: VAR NAME • TYPE ASSIGN exp SEMICOLON

    TYPE  shift, and go to state 17


State 8

   21 stmt: NAME • ASSIGN exp SEMICOLON
   22     | NAME • LPAREN exps RPAREN SEMICOLON

    LPAREN  shift, and go to state 18
    ASSIGN  shift, and go to state 19


State 9

   14 stmt: RETURN • exp SEMICOLON
   15     | RETURN • SEMICOLON

    STRING     shift, and go to state 20
    NAME       shift, and go to state 21
    INT        shift, and go to state 22
    SEMICOLON  shift, and go to state 23
    LPAREN     shift, and go to state 24
    OP_NOT     shift, and go to state 25

    exp  go to state 26


State 10

   16 stmt: IF • LPAREN exp RPAREN LCURL stmts RCURL
   17     | IF • LPAREN exp RPAREN LCURL stmts RCURL ELSE LCURL stmts RCURL

    LPAREN  shift, and go to state 27


State 11

   18 stmt: WHILE • LPAREN exp RPAREN LCURL stmts RCURL
   19     | WHILE • LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts RCURL

    LPAREN  shift, and go to state 28


State 12

   20 stmt: REPEAT • LPAREN exp RPAREN LCURL stmts RCURL

    LPAREN  shift, and go to state 29


State 13

    7 func: FUN • NAME TYPE LPAREN argdecls RPAREN LCURL vars stmts RCURL

    NAME  shift, and go to state 30


State 14

    5 funcs: funcs func •

    $default  reduce using rule 5 (funcs)


State 15

    1 program: vars funcs stmts •
   12 stmts: stmts • stmt

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    $default  reduce using rule 1 (program)

    stmt  go to state 31


State 16

   13 stmts: stmt •

    $default  reduce using rule 13 (stmts)


State 17

    4 var: VAR NAME TYPE • ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 32


State 18

   22 stmt: NAME LPAREN • exps RPAREN SEMICOLON

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    $default  reduce using rule 47 (exps)

    exp   go to state 33
    exps  go to state 34


State 19

   21 stmt: NAME ASSIGN • exp SEMICOLON

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 35


State 20

   25 exp: STRING •

    $default  reduce using rule 25 (exp)


State 21

   24 exp: NAME •
   27    | NAME • LPAREN exps RPAREN

    LPAREN  shift, and go to state 36

    $default  reduce using rule 24 (exp)


State 22

   23 exp: INT •

    $default  reduce using rule 23 (exp)


State 23

   15 stmt: RETURN SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 24

   26 exp: LPAREN • exp RPAREN

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 37


State 25

   44 exp: OP_NOT • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 38


State 26

   14 stmt: RETURN exp • SEMICOLON
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    SEMICOLON  shift, and go to state 39
    OP_OR      shift, and go to state 40
    OP_AND     shift, and go to state 41
    OP_BOR     shift, and go to state 42
    OP_XOR     shift, and go to state 43
    OP_BAND    shift, and go to state 44
    OP_EQ      shift, and go to state 45
    OP_NE      shift, and go to state 46
    OP_LT      shift, and go to state 47
    OP_GT      shift, and go to state 48
    OP_LE      shift, and go to state 49
    OP_GE      shift, and go to state 50
    OP_PLUS    shift, and go to state 51
    OP_MINUS   shift, and go to state 52
    OP_TIMES   shift, and go to state 53
    OP_DIV     shift, and go to state 54
    OP_REM     shift, and go to state 55


State 27

   16 stmt: IF LPAREN • exp RPAREN LCURL stmts RCURL
   17     | IF LPAREN • exp RPAREN LCURL stmts RCURL ELSE LCURL stmts RCURL

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 56


State 28

   18 stmt: WHILE LPAREN • exp RPAREN LCURL stmts RCURL
   19     | WHILE LPAREN • exp RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts RCURL

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 57


State 29

   20 stmt: REPEAT LPAREN • exp RPAREN LCURL stmts RCURL

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 58


State 30

    7 func: FUN NAME • TYPE LPAREN argdecls RPAREN LCURL vars stmts RCURL

    TYPE  shift, and go to state 59


State 31

   12 stmts: stmts stmt •

    $default  reduce using rule 12 (stmts)


State 32

    4 var: VAR NAME TYPE ASSIGN • exp SEMICOLON

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 60


State 33

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp
   45 exps: exp • COMMA exps
   46     | exp •

    COMMA     shift, and go to state 61
    OP_OR     shift, and go to state 40
    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 46 (exps)


State 34

   22 stmt: NAME LPAREN exps • RPAREN SEMICOLON

    RPAREN  shift, and go to state 62


State 35

   21 stmt: NAME ASSIGN exp • SEMICOLON
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    SEMICOLON  shift, and go to state 63
    OP_OR      shift, and go to state 40
    OP_AND     shift, and go to state 41
    OP_BOR     shift, and go to state 42
    OP_XOR     shift, and go to state 43
    OP_BAND    shift, and go to state 44
    OP_EQ      shift, and go to state 45
    OP_NE      shift, and go to state 46
    OP_LT      shift, and go to state 47
    OP_GT      shift, and go to state 48
    OP_LE      shift, and go to state 49
    OP_GE      shift, and go to state 50
    OP_PLUS    shift, and go to state 51
    OP_MINUS   shift, and go to state 52
    OP_TIMES   shift, and go to state 53
    OP_DIV     shift, and go to state 54
    OP_REM     shift, and go to state 55


State 36

   27 exp: NAME LPAREN • exps RPAREN

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    $default  reduce using rule 47 (exps)

    exp   go to state 33
    exps  go to state 64


State 37

   26 exp: LPAREN exp • RPAREN
   28    | exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    RPAREN    shift, and go to state 65
    OP_OR     shift, and go to state 40
    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55


State 38

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp
   44    | OP_NOT exp •

    $default  reduce using rule 44 (exp)


State 39

   14 stmt: RETURN exp SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 40

   37 exp: exp OP_OR • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 66


State 41

   36 exp: exp OP_AND • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 67


State 42

   33 exp: exp OP_BOR • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 68


State 43

   35 exp: exp OP_XOR • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 69


State 44

   34 exp: exp OP_BAND • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 70


State 45

   38 exp: exp OP_EQ • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 71


State 46

   39 exp: exp OP_NE • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 72


State 47

   40 exp: exp OP_LT • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 73


State 48

   41 exp: exp OP_GT • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 74


State 49

   42 exp: exp OP_LE • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 75


State 50

   43 exp: exp OP_GE • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 76


State 51

   28 exp: exp OP_PLUS • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 77


State 52

   29 exp: exp OP_MINUS • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 78


State 53

   30 exp: exp OP_TIMES • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 79


State 54

   31 exp: exp OP_DIV • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 80


State 55

   32 exp: exp OP_REM • exp

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    exp  go to state 81


State 56

   16 stmt: IF LPAREN exp • RPAREN LCURL stmts RCURL
   17     | IF LPAREN exp • RPAREN LCURL stmts RCURL ELSE LCURL stmts RCURL
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    RPAREN    shift, and go to state 82
    OP_OR     shift, and go to state 40
    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55


State 57

   18 stmt: WHILE LPAREN exp • RPAREN LCURL stmts RCURL
   19     | WHILE LPAREN exp • RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts RCURL
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    RPAREN    shift, and go to state 83
    OP_OR     shift, and go to state 40
    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55


State 58

   20 stmt: REPEAT LPAREN exp • RPAREN LCURL stmts RCURL
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    RPAREN    shift, and go to state 84
    OP_OR     shift, and go to state 40
    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55


State 59

    7 func: FUN NAME TYPE • LPAREN argdecls RPAREN LCURL vars stmts RCURL

    LPAREN  shift, and go to state 85


State 60

    4 var: VAR NAME TYPE ASSIGN exp • SEMICOLON
   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    SEMICOLON  shift, and go to state 86
    OP_OR      shift, and go to state 40
    OP_AND     shift, and go to state 41
    OP_BOR     shift, and go to state 42
    OP_XOR     shift, and go to state 43
    OP_BAND    shift, and go to state 44
    OP_EQ      shift, and go to state 45
    OP_NE      shift, and go to state 46
    OP_LT      shift, and go to state 47
    OP_GT      shift, and go to state 48
    OP_LE      shift, and go to state 49
    OP_GE      shift, and go to state 50
    OP_PLUS    shift, and go to state 51
    OP_MINUS   shift, and go to state 52
    OP_TIMES   shift, and go to state 53
    OP_DIV     shift, and go to state 54
    OP_REM     shift, and go to state 55


State 61

   45 exps: exp COMMA • exps

    STRING  shift, and go to state 20
    NAME    shift, and go to state 21
    INT     shift, and go to state 22
    LPAREN  shift, and go to state 24
    OP_NOT  shift, and go to state 25

    $default  reduce using rule 47 (exps)

    exp   go to state 33
    exps  go to state 87


State 62

   22 stmt: NAME LPAREN exps RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 63

   21 stmt: NAME ASSIGN exp SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 64

   27 exp: NAME LPAREN exps • RPAREN

    RPAREN  shift, and go to state 89


State 65

   26 exp: LPAREN exp RPAREN •

    $default  reduce using rule 26 (exp)


State 66

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   37    | exp OP_OR exp •
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_AND    shift, and go to state 41
    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 37 (exp)


State 67

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   36    | exp OP_AND exp •
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_BOR    shift, and go to state 42
    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 36 (exp)


State 68

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   33    | exp OP_BOR exp •
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_XOR    shift, and go to state 43
    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 33 (exp)


State 69

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   35    | exp OP_XOR exp •
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_BAND   shift, and go to state 44
    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 35 (exp)


State 70

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   34    | exp OP_BAND exp •
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_EQ     shift, and go to state 45
    OP_NE     shift, and go to state 46
    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 34 (exp)


State 71

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   38    | exp OP_EQ exp •
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 38 (exp)


State 72

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   39    | exp OP_NE exp •
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_LT     shift, and go to state 47
    OP_GT     shift, and go to state 48
    OP_LE     shift, and go to state 49
    OP_GE     shift, and go to state 50
    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 39 (exp)


State 73

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   40    | exp OP_LT exp •
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 40 (exp)


State 74

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   41    | exp OP_GT exp •
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 41 (exp)


State 75

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   42    | exp OP_LE exp •
   43    | exp • OP_GE exp

    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 42 (exp)


State 76

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp
   43    | exp OP_GE exp •

    OP_PLUS   shift, and go to state 51
    OP_MINUS  shift, and go to state 52
    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 43 (exp)


State 77

   28 exp: exp • OP_PLUS exp
   28    | exp OP_PLUS exp •
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 28 (exp)


State 78

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   29    | exp OP_MINUS exp •
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    OP_TIMES  shift, and go to state 53
    OP_DIV    shift, and go to state 54
    OP_REM    shift, and go to state 55

    $default  reduce using rule 29 (exp)


State 79

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   30    | exp OP_TIMES exp •
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    $default  reduce using rule 30 (exp)


State 80

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   31    | exp OP_DIV exp •
   32    | exp • OP_REM exp
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    $default  reduce using rule 31 (exp)


State 81

   28 exp: exp • OP_PLUS exp
   29    | exp • OP_MINUS exp
   30    | exp • OP_TIMES exp
   31    | exp • OP_DIV exp
   32    | exp • OP_REM exp
   32    | exp OP_REM exp •
   33    | exp • OP_BOR exp
   34    | exp • OP_BAND exp
   35    | exp • OP_XOR exp
   36    | exp • OP_AND exp
   37    | exp • OP_OR exp
   38    | exp • OP_EQ exp
   39    | exp • OP_NE exp
   40    | exp • OP_LT exp
   41    | exp • OP_GT exp
   42    | exp • OP_LE exp
   43    | exp • OP_GE exp

    $default  reduce using rule 32 (exp)


State 82

   16 stmt: IF LPAREN exp RPAREN • LCURL stmts RCURL
   17     | IF LPAREN exp RPAREN • LCURL stmts RCURL ELSE LCURL stmts RCURL

    LCURL  shift, and go to state 90


State 83

   18 stmt: WHILE LPAREN exp RPAREN • LCURL stmts RCURL
   19     | WHILE LPAREN exp RPAREN • LCURL stmts RCURL OTHERWISE LCURL stmts RCURL

    LCURL  shift, and go to state 91


State 84

   20 stmt: REPEAT LPAREN exp RPAREN • LCURL stmts RCURL

    LCURL  shift, and go to state 92


State 85

    7 func: FUN NAME TYPE LPAREN • argdecls RPAREN LCURL vars stmts RCURL

    NAME  shift, and go to state 93

    $default  reduce using rule 8 (argdecls)

    argdecls  go to state 94
    argdecl   go to state 95


State 86

    4 var: VAR NAME TYPE ASSIGN exp SEMICOLON •

    $default  reduce using rule 4 (var)


State 87

   45 exps: exp COMMA exps •

    $default  reduce using rule 45 (exps)


State 88

   22 stmt: NAME LPAREN exps RPAREN SEMICOLON •

    $default  reduce using rule 22 (stmt)


State 89

   27 exp: NAME LPAREN exps RPAREN •

    $default  reduce using rule 27 (exp)


State 90

   16 stmt: IF LPAREN exp RPAREN LCURL • stmts RCURL
   17     | IF LPAREN exp RPAREN LCURL • stmts RCURL ELSE LCURL stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    stmts  go to state 96
    stmt   go to state 16


State 91

   18 stmt: WHILE LPAREN exp RPAREN LCURL • stmts RCURL
   19     | WHILE LPAREN exp RPAREN LCURL • stmts RCURL OTHERWISE LCURL stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    stmts  go to state 97
    stmt   go to state 16


State 92

   20 stmt: REPEAT LPAREN exp RPAREN LCURL • stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    stmts  go to state 98
    stmt   go to state 16


State 93

   11 argdecl: NAME • TYPE

    TYPE  shift, and go to state 99


State 94

    7 func: FUN NAME TYPE LPAREN argdecls • RPAREN LCURL vars stmts RCURL

    RPAREN  shift, and go to state 100


State 95

    9 argdecls: argdecl •
   10         | argdecl • COMMA argdecls

    COMMA  shift, and go to state 101

    $default  reduce using rule 9 (argdecls)


State 96

   12 stmts: stmts • stmt
   16 stmt: IF LPAREN exp RPAREN LCURL stmts • RCURL
   17     | IF LPAREN exp RPAREN LCURL stmts • RCURL ELSE LCURL stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 102

    stmt  go to state 31


State 97

   12 stmts: stmts • stmt
   18 stmt: WHILE LPAREN exp RPAREN LCURL stmts • RCURL
   19     | WHILE LPAREN exp RPAREN LCURL stmts • RCURL OTHERWISE LCURL stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 103

    stmt  go to state 31


State 98

   12 stmts: stmts • stmt
   20 stmt: REPEAT LPAREN exp RPAREN LCURL stmts • RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 104

    stmt  go to state 31


State 99

   11 argdecl: NAME TYPE •

    $default  reduce using rule 11 (argdecl)


State 100

    7 func: FUN NAME TYPE LPAREN argdecls RPAREN • LCURL vars stmts RCURL

    LCURL  shift, and go to state 105


State 101

   10 argdecls: argdecl COMMA • argdecls

    NAME  shift, and go to state 93

    $default  reduce using rule 8 (argdecls)

    argdecls  go to state 106
    argdecl   go to state 95


State 102

   16 stmt: IF LPAREN exp RPAREN LCURL stmts RCURL •
   17     | IF LPAREN exp RPAREN LCURL stmts RCURL • ELSE LCURL stmts RCURL

    ELSE  shift, and go to state 107

    $default  reduce using rule 16 (stmt)


State 103

   18 stmt: WHILE LPAREN exp RPAREN LCURL stmts RCURL •
   19     | WHILE LPAREN exp RPAREN LCURL stmts RCURL • OTHERWISE LCURL stmts RCURL

    OTHERWISE  shift, and go to state 108

    $default  reduce using rule 18 (stmt)


State 104

   20 stmt: REPEAT LPAREN exp RPAREN LCURL stmts RCURL •

    $default  reduce using rule 20 (stmt)


State 105

    7 func: FUN NAME TYPE LPAREN argdecls RPAREN LCURL • vars stmts RCURL

    $default  reduce using rule 3 (vars)

    vars  go to state 109


State 106

   10 argdecls: argdecl COMMA argdecls •

    $default  reduce using rule 10 (argdecls)


State 107

   17 stmt: IF LPAREN exp RPAREN LCURL stmts RCURL ELSE • LCURL stmts RCURL

    LCURL  shift, and go to state 110


State 108

   19 stmt: WHILE LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE • LCURL stmts RCURL

    LCURL  shift, and go to state 111


State 109

    2 vars: vars • var
    7 func: FUN NAME TYPE LPAREN argdecls RPAREN LCURL vars • stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    VAR     shift, and go to state 4

    var    go to state 5
    stmts  go to state 112
    stmt   go to state 16


State 110

   17 stmt: IF LPAREN exp RPAREN LCURL stmts RCURL ELSE LCURL • stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    stmts  go to state 113
    stmt   go to state 16


State 111

   19 stmt: WHILE LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE LCURL • stmts RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12

    stmts  go to state 114
    stmt   go to state 16


State 112

    7 func: FUN NAME TYPE LPAREN argdecls RPAREN LCURL vars stmts • RCURL
   12 stmts: stmts • stmt

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 115

    stmt  go to state 31


State 113

   12 stmts: stmts • stmt
   17 stmt: IF LPAREN exp RPAREN LCURL stmts RCURL ELSE LCURL stmts • RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 116

    stmt  go to state 31


State 114

   12 stmts: stmts • stmt
   19 stmt: WHILE LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts • RCURL

    NAME    shift, and go to state 8
    RETURN  shift, and go to state 9
    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    REPEAT  shift, and go to state 12
    RCURL   shift, and go to state 117

    stmt  go to state 31


State 115

    7 func: FUN NAME TYPE LPAREN argdecls RPAREN LCURL vars stmts RCURL •

    $default  reduce using rule 7 (func)


State 116

   17 stmt: IF LPAREN exp RPAREN LCURL stmts RCURL ELSE LCURL stmts RCURL •

    $default  reduce using rule 17 (stmt)


State 117

   19 stmt: WHILE LPAREN exp RPAREN LCURL stmts RCURL OTHERWISE LCURL stmts RCURL •

    $default  reduce using rule 19 (stmt)
