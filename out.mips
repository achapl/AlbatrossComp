		li $v0, 400			# astExpr - int_exp: load resulting integer value to push to the stack
		sw $v0, ($sp) 			# PUSH0 - store $v0 on top of stack
		addi $at, $zero, 4			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		sub $sp, $sp, $at			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		li $v0, 73			# astExpr - int_exp: load resulting integer value to push to the stack
		sw $v0, ($sp) 			# PUSH0 - store $v0 on top of stack
		addi $at, $zero, 4			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		sub $sp, $sp, $at			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		addi $sp, $sp, 4			# POP0 - adjust stack pointer by register size to pt to top stack value
		lw $v0, ($sp)			# POP0 - store $v0 on top of stack
		sw $zero, ($sp)			# POP0 - clear free space atop stack
		addi $sp, $sp, 4			# POP1 - adjust stack pointer by register size to pt to top stack value
		lw $v1, ($sp)			# POP1 - store $v0 on top of stack
		sw $zero, ($sp)			# POP1 - clear free space atop stack
		add $v0, $v0, $v1			# BINOP_EXP PLUS_OP - Add the two operands
		sw $v0, ($sp) 			# PUSH0 - store $v0 on top of stack
		addi $at, $zero, 4			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		sub $sp, $sp, $at			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		addi $sp, $sp, 4			# POP0 - adjust stack pointer by register size to pt to top stack value
		lw $v0, ($sp)			# POP0 - store $v0 on top of stack
		sw $zero, ($sp)			# POP0 - clear free space atop stack
		move $a0, $v0			# PRINTINT pass int to be printed
		li $v0, 1			# PRINTINT specify printint as the syscall to perform
		syscall			# PRINTINT perform syscall
		li $v0, 0			# astExpr - int_exp: load resulting integer value to push to the stack
		sw $v0, ($sp) 			# PUSH0 - store $v0 on top of stack
		addi $at, $zero, 4			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		sub $sp, $sp, $at			# PUSH0 - adjust stack pointer by register size to pt to next unused position
		addi $sp, $sp, 4			# POP0 - adjust stack pointer by register size to pt to top stack value
		lw $v0, ($sp)			# POP0 - store $v0 on top of stack
		sw $zero, ($sp)			# POP0 - clear free space atop stack
		move $a0, $v0			# EXIT pass return code
		li $v0, 17			# EXIT specify exit2 as the syscall to perform
		syscall			# EXIT perform syscall
